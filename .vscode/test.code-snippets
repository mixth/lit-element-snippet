{
	"Create LitElement Component in Typescript": {
		"scope": "typescript",
		"prefix": "litele",
		"body": [
			"import { LitElement, customElement } from 'lit-element';",
			"",
			"@customElement('${TM_FILENAME_BASE}')",
			"export class ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g} extends LitElement {",
			"\t${0}",
			"}",
			""
		],
		"description": "New LitElement subclass"
	},
	"Create LitElement Component in Javascript": {
		"scope": "javascript",
		"prefix": "litele",
		"body": [
			"import { LitElement } from 'lit-element';",
			"",
			"export class ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g} extends LitElement {",
			"\t${0}",
			"}",
			"customElements.define('${TM_FILENAME_BASE}', ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g});",
			""
		],
		"description": "New LitElement subclass"
	},
	"Create LitElement Component With lit-html": {
		"scope": "typescript",
		"prefix": "litelehtml",
		"body": [
			"import { LitElement, html, customElement, css } from 'lit-element';",
			"",
			"@customElement('${TM_FILENAME_BASE}')",
			"export class ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g} extends LitElement {",
			"",
			"\tstatic styles = css`",
			"\t:host {",
			"\t\tdisplay: block;",
			"\t}",
			"\t`;",
			"",
			"\trender() {",
			"\t\treturn html`${0}`;",
			"\t}",
			"}",
			""
		],
		"description": "New LitElement subclass with lit-html"
	},
	"Create LitElement Component With lit-html in Javascript": {
		"scope": "javascript",
		"prefix": "litelehtml",
		"body": [
			"import { LitElement, html, css } from 'lit-element';",
			"",
			"export class ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g} extends LitElement {",
			"",
			"\tstatic styles = css`",
			"\t:host {",
			"\t\tdisplay: block;",
			"\t}",
			"\t`;",
			"",
			"\trender() {",
			"\t\treturn html`${0}`;",
			"\t}",
			"}",
			"customElements.define('${TM_FILENAME_BASE}', ${TM_FILENAME_BASE/([a-z]*)(-)?/${1:/capitalize}/g});",
			""
		],
		"description": "New LitElement subclass"
	},
	"Generate Render Function With lit-html": {
		"scope": "javascript,typescript",
		"prefix": ["litrender", "render"],
		"body": [
			"render() {",
			"\treturn html`${0}`;",
			"}"
		],
		"description": "Generate render function with lit-html"
	},
	"Generate LitElement Property in Typescript": {
		"scope": "typescript",
		"prefix": ["litprop", "property", "@property"],
		"body": [
			"@property({ type: ${1|String,Number,Boolean,Array,Object|} }) ${2:propName}: ${3:any};${0}"
		],
		"description": "Generate LitElement Property"
	},
	"Generate LitElement Property in Javascript": {
		"scope": "javascript",
		"prefix": ["property"],
		"body": [
			"${1:propName}: { type: ${2|String,Number,Boolean,Array,Object|} },${0}",
		],
		"description": "Generate LitElement Property"
	},
	"Generate LitElement Properties in Javascript": {
		"scope": "javascript",
		"prefix": ["litprop", "properties"],
		"body": [
			"static get properties() {",
			"\treturn {",
			"\t\t${1:propName}: { type: ${2|String,Number,Boolean,Array,Object|} }${0}",
			"\t};",
			"}"
		],
		"description": "Generate LitElement Property"
	},
	"Generate Element Query Property in Javascript": {
		"scope": "javascript",
		"prefix": ["litquery", "query"],
		"body": [
			"get ${1:propName}() {",
			"\treturn this.shadowRoot.querySelector('${2:queryString}');",
			"}"
		],
		"description": "Generate Element Query Property"
	},
	"Generate Element Query Property in Typescript": {
		"scope": "typescript",
		"prefix": ["litquery", "query", "@query"],
		"body": [
			"@query('${1:queryString}') ${2:propName}: ${3:any};${0}"
		],
		"description": "Generate Element Query Property"
	},
	"Generate Elements Query Property in Javascript": {
		"scope": "javascript",
		"prefix": ["litqueryall", "queryall"],
		"body": [
			"get ${1:propName}() {",
			"\treturn this.shadowRoot.querySelectorAll('${2:queryString}');",
			"}${0}"
		],
		"description": "Generate Elements Query Property"
	},
	"Generate Elements Query Property in Typescript": {
		"scope": "typescript",
		"prefix": ["litqueryall", "queryall", "@queryall"],
		"body": [
			"@queryAll('${1:queryString}') ${2:propName}: NodeListOf<${3:any}>;${0}"
		],
		"description": "Generate Elements Query Property"
	},
    "Generate LitElement Static Styles": {
		"scope": "javascript,typescript",
		"prefix": ["litstyles", "styles"],
		"body": [
			"static styles = css`${0}`;"
		]
	},
	"Add New Event Listener": {
		"scope": "javascript,typescript",
		"prefix": "addeventlistener",
		"body": [
			"this.addEventListener('${1:eventName}', ${2:handler});${0}"
		]
	},
	"Add New Custom Event": {
		"scope": "javascript,typescript",
		"prefix": "customevent",
		"body": [
			"new CustomEvent('${1:eventName}');"
		]
	}
}